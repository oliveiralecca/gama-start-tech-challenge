{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\n\nvar domhandler_1 = require(\"domhandler\");\n\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\n\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\n\n\nfunction getOuterHTML(node, options) {\n  return dom_serializer_1.default(node, options);\n}\n\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\n\nfunction getInnerHTML(node, options) {\n  return domhandler_1.hasChildren(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\n\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\n\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if (domhandler_1.isTag(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if (domhandler_1.isCDATA(node)) return getText(node.children);\n  if (domhandler_1.isText(node)) return node.data;\n  return \"\";\n}\n\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\n\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if (domhandler_1.isTag(node)) return textContent(node.children);\n  if (domhandler_1.isCDATA(node)) return textContent(node.children);\n  if (domhandler_1.isText(node)) return node.data;\n  return \"\";\n}\n\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\n\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n\n  if (domhandler_1.hasChildren(node) && node.type === domelementtype_1.ElementType.Tag) {\n    return innerText(node.children);\n  }\n\n  if (domhandler_1.isCDATA(node)) return innerText(node.children);\n  if (domhandler_1.isText(node)) return node.data;\n  return \"\";\n}\n\nexports.innerText = innerText;","map":{"version":3,"sources":["/Users/leticiaoliveira/Documents/GitHub/gama-start-tech-challenge/node_modules/domutils/lib/stringify.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","innerText","textContent","getText","getInnerHTML","getOuterHTML","domhandler_1","require","dom_serializer_1","domelementtype_1","node","options","default","hasChildren","children","map","join","Array","isArray","isTag","name","isCDATA","isText","data","type","ElementType","Tag"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return dom_serializer_1.default(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return domhandler_1.hasChildren(node)\n        ? node.children.map(function (node) { return getOuterHTML(node, options); }).join(\"\")\n        : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (domhandler_1.isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (domhandler_1.isCDATA(node))\n        return getText(node.children);\n    if (domhandler_1.isText(node))\n        return node.data;\n    return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (domhandler_1.isTag(node))\n        return textContent(node.children);\n    if (domhandler_1.isCDATA(node))\n        return textContent(node.children);\n    if (domhandler_1.isText(node))\n        return node.data;\n    return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (domhandler_1.hasChildren(node) && node.type === domelementtype_1.ElementType.Tag) {\n        return innerText(node.children);\n    }\n    if (domhandler_1.isCDATA(node))\n        return innerText(node.children);\n    if (domhandler_1.isText(node))\n        return node.data;\n    return \"\";\n}\nexports.innerText = innerText;\n"]},"metadata":{},"sourceType":"script"}